;;; -*- coding: utf-8; mode: scheme -*-
;;; curllib.stub
;;;

"
#include \"gauche-curl.h\"

"
;; cURL handler
(define-type <curl-base> "CURL*" "curl"
  "SCMCURL_P" "SCMCURL_UNBOX" "SCMCURL_BOX")

;; cURL multi handler
(define-type <curl-multi-base> "CURLM*" "curlm"
  "SCMCURLM_P" "SCMCURLM_UNBOX" "SCMCURLM_BOX")

;; cURL share handler
(define-type <curl-share-base> "CURLSH*" "curlsh"
  "SCMCURLSH_P" "SCMCURLSH_UNBOX" "SCMCURLSH_BOX")

(define-type <curl-slist> "struct curl_slist*" "curl-slist"
  "SCMCURL_SLIST_P" "SCMCURL_SLIST_UNBOX" "SCMCURL_SLIST_BOX")

;; initialize global constants 
(define-cproc curl-global-init (flags::<int>)
  (body <int>
	"SCM_RESULT = curl_global_init(flags);"))

;; cleanup global constants
(define-cproc curl-global-cleanup ()
  (call <void>
	"curl_global_cleanup"))

;; initialize easy handle
(define-cproc curl-easy-init ()
  (body <curl-base>
	"SCM_RESULT = curl_easy_init();"))

;; cleanup easy handle
(define-cproc curl-easy-cleanup (hnd::<curl-base>)
  (call <void>
	"curl_easy_cleanup(hnd);"))

;; initialize multi handle
(define-cproc curl-multi-init ()
  (body <curl-multi-base>
	"SCM_RESULT = curl_multi_init();"))

;; cleanup easy handle
(define-cproc curl-multi-cleanup (mhnd::<curl-multi-base>)
  (call <int>
	"curl_multi_cleanup(mhnd);"))

;; add a standard curl handle to the multi stack
(define-cproc curl-multi-add-handle (mhnd::<curl-multi-base> hnd::<curl-base>)
  (body <int>
	"SCM_RESULT = curl_multi_add_handle(mhnd, hnd);"))

;; removes a curl handle from the multi stack again
(define-cproc curl-multi-remove-handle (mhnd::<curl-multi-base> hnd::<curl-base>)
  (body <int>
	"SCM_RESULT = curl_multi_remove_handle(mhnd, hnd);"))

;; initialize share handle
(define-cproc curl-share-init ()
  (body <curl-share-base>
	"SCM_RESULT = curl_share_init();"))

; set option
;; param expects long, finction pointer, object pointer and curl_off_t
;; number -> long
;; string -> object pointer(string)
;; #f -> NULL
(define-cproc curl-easy-setopt (hnd::<curl-base> opt::<int> param::<top>)
  (body <int>
	"CURLoption curlopt = opt;"
	"if (SCM_NUMBERP(param)) {"
	"  SCM_RESULT = curl_easy_setopt(hnd, curlopt, SCM_INT_VALUE(param));"
	"} else if (SCM_STRINGP(param)) {"
	"  SCM_RESULT = curl_easy_setopt(hnd, curlopt, SCM_STRING_CONST_CSTRING(param));"
	"} else if (SCMCURL_SLIST_P(param)) {"
	"  SCM_RESULT = curl_easy_setopt(hnd, curlopt, SCMCURL_SLIST_UNBOX(param));"
	"} else if (SCM_FALSEP(param)) {"
	"  SCM_RESULT = curl_easy_setopt(hnd, curlopt, NULL);"
	"} else {"
	"  SCM_RESULT = CURLE_GOT_NOTHING;"
	"}"))

;;  require curl_slist
;;   CURLOPT_HTTPHEADER
;;   CURLOPT_HTTP200ALIASES
;;   CURLOPT_PREQUOTE
;;   CURLOPT_QUOTE
;;   CURLOPT_POSTQUOTE
;;   CURLOPT_TELNETOPTIONS

; reset handle
(define-cproc curl-easy-reset (hnd::<curl-base>)
  (call <void>
	"curl_easy_reset(hnd);"))

; duplicate handle
(define-cproc curl-easy-duphandle (hnd::<curl-base>)
  (body <curl-base>
	"SCM_RESULT = curl_easy_duphandle(hnd);"))

(define-cproc curl-easy-pause (hnd::<curl-base> bitmask::<int>)
  (body <int>
	"SCM_RESULT = curl_easy_pause(hnd, SCM_INT_VALUE(bitmask));"))

(define-cproc curl-easy-perform (hnd::<curl-base>)
  (call <int>
	"curl_easy_perform(hnd);"))

(define-cproc curl-easy-getinfo (hnd::<curl-base> info::<int>)
  (body <top>
	"SCM_RESULT = _curl_easy_getinfo(hnd, info);"))

(define-cproc curl-easy-strerror (errno::<int>)
  (call <const-cstring> 
	"curl_easy_strerror(errno);"))

; curl_slist_append:      not implement
; curl_slist_free_all:    not implement
;; Implemation of curl_slist_append() is difficult. And I gave up.
;; These functions are instead of it
(define-cproc list->curl-slist (ls::<list>)
  (body <curl-slist> 
	"SCM_RESULT = list_to_curl_slist(ls);"))

(define-cproc curl-slist->list (slist::<curl-slist>)
  (body <list>
	"SCM_RESULT = curl_slist_to_list(slist);"))

; uri string escape
(define-cproc curl-easy-escape (hnd::<curl-base> str::<const-cstring> length::<int>)
  (call <const-cstring> 
	"curl_easy_escape(hnd, str, SCM_INT_VALUE(length));"))

; uri string unescape
(define-cproc curl-easy-unescape (hnd::<curl-base> str::<const-cstring> length::<int> outlength::<int>)
  (call <const-cstring> 
	"curl_easy_unescape(hnd, str, SCM_INT_VALUE(length), (int*)SCM_INT_VALUE(outlength));"))

; reclaim memory that has been obtained through a libcurl call
(define-cproc curl-free (str::<string>)
  (call <void> "curl_free(str);"))

; return value for environment name
(define-cproc curl-getenv (str::<const-cstring>)
  (body <const-cstring>
	"SCM_RESULT = curl_getenv(str);"))

; sends raw data over an "easy" connection
(define-cproc curl-easy-send (hnd::<curl-base> str::<const-cstring> length::<int> size::<int>)
  (body <int>
	"SCM_RESULT = curl_easy_send(hnd, str, length, (int *)size);"))

; receives raw data on an "easy" connection
(define-cproc curl-easy-recv (hnd::<curl-base> str::<string> length::<int> size::<int>)
  (body <int>
	"SCM_RESULT = curl_easy_recv(hnd, str, length, (int *)size);"))

; returns the libcurl version string
(define-cproc curl-version ()
  (call <const-cstring> "curl_version"))

; returns run-time libcurl version info
(define-cproc curl-version-info ()
  (call <list> "curl_version_info_list"))


; I/O handling
(define-cproc curl-open-file (hnd::<curl-base> type::<int> fn::<const-cstring>)
  (body <top>
	"SCM_RESULT = curl_open_file(hnd, type, fn);"))

(define-cproc curl-open-port (hnd::<curl-base> type::<int> port::<top>)
  (body <top>
	"SCM_RESULT = curl_open_port(hnd, type, SCM_PORT(port));"))

;; global flags
(define-enum CURL_GLOBAL_ALL)
(define-enum CURL_GLOBAL_SSL)
(define-enum CURL_GLOBAL_WIN32)
(define-enum CURL_GLOBAL_NOTHING)

;; CURLoption
(define-enum CURLOPT_FILE)
(define-enum CURLOPT_URL)
(define-enum CURLOPT_PORT)
(define-enum CURLOPT_PROXY)
(define-enum CURLOPT_USERPWD)
(define-enum CURLOPT_PROXYUSERPWD)
(define-enum CURLOPT_RANGE)
(define-enum CURLOPT_INFILE)
(define-enum CURLOPT_ERRORBUFFER)
(define-enum CURLOPT_WRITEFUNCTION)
(define-enum CURLOPT_WRITEDATA)
(define-enum CURLOPT_READFUNCTION)
(define-enum CURLOPT_READDATA)
(define-enum CURLOPT_TIMEOUT)
(define-enum CURLOPT_INFILESIZE)
(define-enum CURLOPT_POSTFIELDS)
(define-enum CURLOPT_REFERER)
(define-enum CURLOPT_FTPPORT)
(define-enum CURLOPT_USERAGENT)
(define-enum CURLOPT_LOW_SPEED_LIMIT)
(define-enum CURLOPT_LOW_SPEED_TIME)
(define-enum CURLOPT_RESUME_FROM)
(define-enum CURLOPT_COOKIE)
(define-enum CURLOPT_HTTPHEADER)
(define-enum CURLOPT_HTTPPOST)
(define-enum CURLOPT_SSLCERT)
(define-enum CURLOPT_KEYPASSWD)
(define-enum CURLOPT_CRLF)
(define-enum CURLOPT_QUOTE)
(define-enum CURLOPT_WRITEHEADER)
(define-enum CURLOPT_COOKIEFILE)
(define-enum CURLOPT_SSLVERSION)
(define-enum CURLOPT_TIMECONDITION)
(define-enum CURLOPT_TIMEVALUE)
(define-enum CURLOPT_CUSTOMREQUEST)
(define-enum CURLOPT_STDERR)
(define-enum CURLOPT_POSTQUOTE)
(define-enum CURLOPT_WRITEINFO)
(define-enum CURLOPT_VERBOSE)
(define-enum CURLOPT_HEADER)
(define-enum CURLOPT_NOPROGRESS)
(define-enum CURLOPT_NOBODY)
(define-enum CURLOPT_FAILONERROR)
(define-enum CURLOPT_UPLOAD)
(define-enum CURLOPT_POST)
(define-enum CURLOPT_DIRLISTONLY)
(define-enum CURLOPT_APPEND)
(define-enum CURLOPT_NETRC)
(define-enum CURLOPT_FOLLOWLOCATION)
(define-enum CURLOPT_TRANSFERTEXT)
(define-enum CURLOPT_PUT)
(define-enum CURLOPT_PROGRESSFUNCTION)
(define-enum CURLOPT_PROGRESSDATA)
(define-enum CURLOPT_AUTOREFERER)
(define-enum CURLOPT_PROXYPORT)
(define-enum CURLOPT_POSTFIELDSIZE)
(define-enum CURLOPT_HTTPPROXYTUNNEL)
(define-enum CURLOPT_INTERFACE)
(define-enum CURLOPT_KRBLEVEL)
(define-enum CURLOPT_SSL_VERIFYPEER)
(define-enum CURLOPT_CAINFO)
(define-enum CURLOPT_MAXREDIRS)
(define-enum CURLOPT_FILETIME)
(define-enum CURLOPT_TELNETOPTIONS)
(define-enum CURLOPT_MAXCONNECTS)
(define-enum CURLOPT_CLOSEPOLICY)
(define-enum CURLOPT_FRESH_CONNECT)
(define-enum CURLOPT_FORBID_REUSE)
(define-enum CURLOPT_RANDOM_FILE)
(define-enum CURLOPT_EGDSOCKET)
(define-enum CURLOPT_CONNECTTIMEOUT)
(define-enum CURLOPT_HEADERFUNCTION)
(define-enum CURLOPT_HTTPGET)
(define-enum CURLOPT_SSL_VERIFYHOST)
(define-enum CURLOPT_COOKIEJAR)
(define-enum CURLOPT_SSL_CIPHER_LIST)
(define-enum CURLOPT_HTTP_VERSION)
(define-enum CURLOPT_FTP_USE_EPSV)
(define-enum CURLOPT_SSLCERTTYPE)
(define-enum CURLOPT_SSLKEY)
(define-enum CURLOPT_SSLKEYTYPE)
(define-enum CURLOPT_SSLENGINE)
(define-enum CURLOPT_SSLENGINE_DEFAULT)
(define-enum CURLOPT_DNS_USE_GLOBAL_CACHE)
(define-enum CURLOPT_DNS_CACHE_TIMEOUT)
(define-enum CURLOPT_PREQUOTE)
(define-enum CURLOPT_DEBUGFUNCTION)
(define-enum CURLOPT_DEBUGDATA)
(define-enum CURLOPT_COOKIESESSION)
(define-enum CURLOPT_CAPATH)
(define-enum CURLOPT_BUFFERSIZE)
(define-enum CURLOPT_NOSIGNAL)
(define-enum CURLOPT_SHARE)
(define-enum CURLOPT_PROXYTYPE)
(define-enum CURLOPT_ENCODING)
(define-enum CURLOPT_PRIVATE)
(define-enum CURLOPT_HTTP200ALIASES)
(define-enum CURLOPT_UNRESTRICTED_AUTH)
(define-enum CURLOPT_FTP_USE_EPRT)
(define-enum CURLOPT_HTTPAUTH)
(define-enum CURLOPT_SSL_CTX_FUNCTION)
(define-enum CURLOPT_SSL_CTX_DATA)
(define-enum CURLOPT_FTP_CREATE_MISSING_DIRS)
(define-enum CURLOPT_PROXYAUTH)
(define-enum CURLOPT_FTP_RESPONSE_TIMEOUT)
(define-enum CURLOPT_IPRESOLVE)
(define-enum CURLOPT_MAXFILESIZE)
(define-enum CURLOPT_INFILESIZE_LARGE)
(define-enum CURLOPT_RESUME_FROM_LARGE)
(define-enum CURLOPT_MAXFILESIZE_LARGE)
(define-enum CURLOPT_NETRC_FILE)
(define-enum CURLOPT_USE_SSL)
(define-enum CURLOPT_POSTFIELDSIZE_LARGE)
(define-enum CURLOPT_TCP_NODELAY)
(define-enum CURLOPT_FTPSSLAUTH)
(define-enum CURLOPT_IOCTLFUNCTION)
(define-enum CURLOPT_IOCTLDATA)
(define-enum CURLOPT_FTP_ACCOUNT)
(define-enum CURLOPT_COOKIELIST)
(define-enum CURLOPT_IGNORE_CONTENT_LENGTH)
(define-enum CURLOPT_FTP_SKIP_PASV_IP)
(define-enum CURLOPT_FTP_FILEMETHOD)
(define-enum CURLOPT_LOCALPORT)
(define-enum CURLOPT_LOCALPORTRANGE)
(define-enum CURLOPT_CONNECT_ONLY)
(define-enum CURLOPT_CONV_FROM_NETWORK_FUNCTION)
(define-enum CURLOPT_CONV_TO_NETWORK_FUNCTION)
(define-enum CURLOPT_CONV_FROM_UTF8_FUNCTION)
(define-enum CURLOPT_MAX_SEND_SPEED_LARGE)
(define-enum CURLOPT_MAX_RECV_SPEED_LARGE)
(define-enum CURLOPT_FTP_ALTERNATIVE_TO_USER)
(define-enum CURLOPT_SOCKOPTFUNCTION)
(define-enum CURLOPT_SOCKOPTDATA)
(define-enum CURLOPT_SSL_SESSIONID_CACHE)
(define-enum CURLOPT_SSH_AUTH_TYPES)
(define-enum CURLOPT_SSH_PUBLIC_KEYFILE)
(define-enum CURLOPT_SSH_PRIVATE_KEYFILE)
(define-enum CURLOPT_FTP_SSL_CCC)
(define-enum CURLOPT_TIMEOUT_MS)
(define-enum CURLOPT_CONNECTTIMEOUT_MS)
(define-enum CURLOPT_HTTP_TRANSFER_DECODING)
(define-enum CURLOPT_HTTP_CONTENT_DECODING)
(define-enum CURLOPT_NEW_FILE_PERMS)
(define-enum CURLOPT_NEW_DIRECTORY_PERMS)
(define-enum-conditionally CURLOPT_POSTREDIR)
(define-enum CURLOPT_SSH_HOST_PUBLIC_KEY_MD5)
(define-enum CURLOPT_OPENSOCKETFUNCTION)
(define-enum CURLOPT_OPENSOCKETDATA)
(define-enum CURLOPT_COPYPOSTFIELDS)
(define-enum CURLOPT_PROXY_TRANSFER_MODE)
(define-enum CURLOPT_SEEKFUNCTION)
(define-enum CURLOPT_SEEKDATA)
(define-enum-conditionally CURLOPT_CRLFILE)
(define-enum-conditionally CURLOPT_ISSUERCERT)
(define-enum-conditionally CURLOPT_ADDRESS_SCOPE)
(define-enum-conditionally CURLOPT_CERTINFO)
(define-enum-conditionally CURLOPT_USERNAME)
(define-enum-conditionally CURLOPT_PASSWORD)
(define-enum-conditionally CURLOPT_PROXYUSERNAME)
(define-enum-conditionally CURLOPT_PROXYPASSWORD)

(define-enum CURLOPTTYPE_OFF_T)

;; CURLcode
(define-enum CURLE_OK)
(define-enum CURLE_UNSUPPORTED_PROTOCOL)
(define-enum CURLE_FAILED_INIT)
(define-enum CURLE_URL_MALFORMAT)
(define-enum CURLE_COULDNT_RESOLVE_PROXY)
(define-enum CURLE_COULDNT_RESOLVE_HOST)
(define-enum CURLE_COULDNT_CONNECT)
(define-enum CURLE_FTP_WEIRD_SERVER_REPLY)
(define-enum CURLE_REMOTE_ACCESS_DENIED)
(define-enum CURLE_FTP_WEIRD_PASS_REPLY)
(define-enum CURLE_FTP_WEIRD_PASV_REPLY)
(define-enum CURLE_FTP_WEIRD_227_FORMAT)
(define-enum CURLE_FTP_CANT_GET_HOST)
(define-enum CURLE_FTP_COULDNT_SET_TYPE)
(define-enum CURLE_PARTIAL_FILE)
(define-enum CURLE_FTP_COULDNT_RETR_FILE)
(define-enum CURLE_QUOTE_ERROR)
(define-enum CURLE_HTTP_RETURNED_ERROR)
(define-enum CURLE_WRITE_ERROR)
(define-enum CURLE_UPLOAD_FAILED)
(define-enum CURLE_READ_ERROR)
(define-enum CURLE_OUT_OF_MEMORY)
(define-enum CURLE_OPERATION_TIMEDOUT)
(define-enum CURLE_FTP_PORT_FAILED)
(define-enum CURLE_FTP_COULDNT_USE_REST)
(define-enum CURLE_RANGE_ERROR)
(define-enum CURLE_HTTP_POST_ERROR)
(define-enum CURLE_SSL_CONNECT_ERROR)
(define-enum CURLE_BAD_DOWNLOAD_RESUME)
(define-enum CURLE_FILE_COULDNT_READ_FILE)
(define-enum CURLE_LDAP_CANNOT_BIND)
(define-enum CURLE_LDAP_SEARCH_FAILED)
(define-enum CURLE_FUNCTION_NOT_FOUND)
(define-enum CURLE_ABORTED_BY_CALLBACK)
(define-enum CURLE_BAD_FUNCTION_ARGUMENT)
(define-enum CURLE_INTERFACE_FAILED)
(define-enum CURLE_TOO_MANY_REDIRECTS)
(define-enum CURLE_UNKNOWN_TELNET_OPTION)
(define-enum CURLE_TELNET_OPTION_SYNTAX)
(define-enum CURLE_PEER_FAILED_VERIFICATION)
(define-enum CURLE_GOT_NOTHING)
(define-enum CURLE_SSL_ENGINE_NOTFOUND)
(define-enum CURLE_SSL_ENGINE_SETFAILED)
(define-enum CURLE_SEND_ERROR)
(define-enum CURLE_RECV_ERROR)
(define-enum CURLE_SSL_CERTPROBLEM)
(define-enum CURLE_SSL_CIPHER)
(define-enum CURLE_SSL_CACERT)
(define-enum CURLE_BAD_CONTENT_ENCODING)
(define-enum CURLE_LDAP_INVALID_URL)
(define-enum CURLE_FILESIZE_EXCEEDED)
(define-enum CURLE_USE_SSL_FAILED)
(define-enum CURLE_SEND_FAIL_REWIND)
(define-enum CURLE_SSL_ENGINE_INITFAILED)
(define-enum CURLE_LOGIN_DENIED)
(define-enum CURLE_TFTP_NOTFOUND)
(define-enum CURLE_TFTP_PERM)
(define-enum CURLE_REMOTE_DISK_FULL)
(define-enum CURLE_TFTP_ILLEGAL)
(define-enum CURLE_TFTP_UNKNOWNID)
(define-enum CURLE_REMOTE_FILE_EXISTS)
(define-enum CURLE_TFTP_NOSUCHUSER)
(define-enum CURLE_CONV_FAILED)
(define-enum CURLE_CONV_REQD)
(define-enum CURLE_SSL_CACERT_BADFILE)
(define-enum CURLE_REMOTE_FILE_NOT_FOUND)
(define-enum CURLE_SSH)
(define-enum CURLE_SSL_SHUTDOWN_FAILED)
(define-enum CURLE_AGAIN)
(define-enum-conditionally CURLE_SSL_CRL_BADFILE)  ; (>= 7.19)
(define-enum-conditionally CURLE_SSL_ISSUER_ERROR) ; (>= 7.19)
(define-enum CURL_LAST)

;; CURLINFO
(define-enum CURLINFO_NONE)
(define-enum CURLINFO_EFFECTIVE_URL)
(define-enum CURLINFO_RESPONSE_CODE)
(define-enum CURLINFO_TOTAL_TIME)
(define-enum CURLINFO_NAMELOOKUP_TIME)
(define-enum CURLINFO_CONNECT_TIME)
(define-enum CURLINFO_PRETRANSFER_TIME)
(define-enum CURLINFO_SIZE_UPLOAD)
(define-enum CURLINFO_SIZE_DOWNLOAD)
(define-enum CURLINFO_SPEED_DOWNLOAD)
(define-enum CURLINFO_SPEED_UPLOAD)
(define-enum CURLINFO_HEADER_SIZE)
(define-enum CURLINFO_REQUEST_SIZE)
(define-enum CURLINFO_SSL_VERIFYRESULT)
(define-enum CURLINFO_FILETIME)
(define-enum CURLINFO_CONTENT_LENGTH_DOWNLOAD)
(define-enum CURLINFO_CONTENT_LENGTH_UPLOAD)
(define-enum CURLINFO_STARTTRANSFER_TIME)
(define-enum CURLINFO_CONTENT_TYPE)
(define-enum CURLINFO_REDIRECT_TIME)
(define-enum CURLINFO_REDIRECT_COUNT)
(define-enum CURLINFO_PRIVATE)
(define-enum CURLINFO_HTTP_CONNECTCODE)
(define-enum CURLINFO_HTTPAUTH_AVAIL)
(define-enum CURLINFO_PROXYAUTH_AVAIL)
(define-enum CURLINFO_OS_ERRNO)
(define-enum CURLINFO_NUM_CONNECTS)
(define-enum CURLINFO_SSL_ENGINES)
(define-enum CURLINFO_COOKIELIST)
(define-enum CURLINFO_LASTSOCKET)
(define-enum CURLINFO_FTP_ENTRY_PATH)
(define-enum CURLINFO_REDIRECT_URL)
;; (>= 7.19)
(define-enum-conditionally CURLINFO_PRIMARY_IP)
(define-enum-conditionally CURLINFO_APPCONNECT_TIME)
(define-enum-conditionally CURLINFO_CERTINFO)
(define-enum-conditionally CURLINFO_LASTONE)

;; curl_infotype
(define-enum CURLINFO_TEXT)
(define-enum CURLINFO_HEADER_IN)
(define-enum CURLINFO_HEADER_OUT)
(define-enum CURLINFO_DATA_IN)
(define-enum CURLINFO_DATA_OUT)
(define-enum CURLINFO_SSL_DATA_IN)
(define-enum CURLINFO_SSL_DATA_OUT)
(define-enum CURLINFO_END)

;; CURLMcode
(define-enum CURLM_CALL_MULTI_PERFORM)
(define-enum CURLM_OK)
(define-enum CURLM_BAD_HANDLE)
(define-enum CURLM_BAD_EASY_HANDLE)
(define-enum CURLM_OUT_OF_MEMORY)
(define-enum CURLM_INTERNAL_ERROR)
(define-enum CURLM_BAD_SOCKET)
(define-enum CURLM_UNKNOWN_OPTION)
(define-enum CURLM_LAST)

;; CURLMSG
(define-enum CURLMSG_NONE)
(define-enum CURLMSG_DONE)
(define-enum CURLMSG_LAST)

;; CURLSHcode
(define-enum CURLSHE_OK)
(define-enum CURLSHE_BAD_OPTION)
(define-enum CURLSHE_IN_USE)
(define-enum CURLSHE_INVALID)
(define-enum CURLSHE_NOMEM)
(define-enum CURLSHE_LAST)

;; CURLSHoption
(define-enum CURLSHOPT_NONE)
(define-enum CURLSHOPT_SHARE)
(define-enum CURLSHOPT_UNSHARE)
(define-enum CURLSHOPT_LOCKFUNC)
(define-enum CURLSHOPT_UNLOCKFUNC)
(define-enum CURLSHOPT_USERDATA)
(define-enum CURLSHOPT_LAST)

;; bitmask
(define-enum CURLPAUSE_RECV)
(define-enum CURLPAUSE_RECV_CONT)
(define-enum CURLPAUSE_SEND)
(define-enum CURLPAUSE_SEND_CONT)
(define-enum CURLPAUSE_ALL)
(define-enum CURLPAUSE_CONT)  

;;cURL version
(define-enum CURLVERSION_FIRST)
(define-enum CURLVERSION_SECOND)
(define-enum CURLVERSION_THIRD)
(define-enum CURLVERSION_FOURTH)
(define-enum CURLVERSION_LAST)
(define-enum CURLVERSION_NOW)

;; cURL http version
(define-enum CURL_HTTP_VERSION_NONE)
(define-enum CURL_HTTP_VERSION_1_0)
(define-enum CURL_HTTP_VERSION_1_1)

;; Local variables:
;; mode: scheme
;; end:
